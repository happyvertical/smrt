{
  "name": "@smrt/gnode",
  "version": "0.41.0",
  "description": "SMRT federation library for building federated local knowledge bases (gnodes)",
  "author": "Will Griffin <willgriffin@gmail.com>",
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "files": [
    "dist",
    "docs"
  ],
  "exports": {
    ".": "./dist/index.js",
    "./federation": "./dist/federation/index.js",
    "./protocols": "./dist/protocols/index.js"
  },
  "dependencies": {
    "@smrt/core": "workspace:*"
  },
  "scripts": {
    "test": "npx vitest run",
    "test:watch": "npx vitest",
    "build": "vite build",
    "build:watch": "vite build --watch",
    "docs": "typedoc --plugin typedoc-plugin-markdown --out docs --entryPoints ./src/index.ts --tsconfig ./tsconfig.json --excludePrivate --excludeInternal --hideGenerator --fileExtension .md --readme none --categorizeByGroup false --includeVersion false --hidePageHeader --hidePageTitle false --outputFileStrategy modules",
    "docs:watch": "typedoc --plugin typedoc-plugin-markdown --out docs --entryPoints ./src/index.ts --tsconfig ./tsconfig.json --excludePrivate --excludeInternal --hideGenerator --fileExtension .md --readme none --categorizeByGroup false --includeVersion false --hidePageHeader --hidePageTitle false --outputFileStrategy modules --watch",
    "clean": "rm -rf dist",
    "dev": "npm run build:watch & npm run test:watch",
    "verify:exports": "node -e \"const pkg = require('./package.json'); const fs = require('fs'); Object.entries(pkg.exports).forEach(([key, path]) => { if (fs.existsSync(path)) { console.log('✅', key, '→', path); } else { console.error('❌', key, '→', path, '(missing)'); process.exit(1); } });\"",
    "build:fresh": "npm run clean && npm run build && npm run verify:exports",
    "prepack": "npm run build:fresh"
  },
  "devDependencies": {
    "@types/node": "^24.0.0",
    "typescript": "^5.7.3",
    "vite": "7.1.3",
    "vite-plugin-dts": "4.3.0",
    "vitest": "^3.2.4"
  }
}
