name: Validate Commits

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  validate:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate commit messages
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: '.commitlintrc.json'
          failOnWarnings: false
          helpURL: 'https://www.conventionalcommits.org/'

      - name: Comment on PR with validation errors
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const message = `## ‚ùå Commit Message Validation Failed

            Your commit messages don't follow the [Conventional Commits](https://www.conventionalcommits.org/) specification.

            ### Format
            \`\`\`
            <type>(<scope>): <subject>

            <body>

            <footer>
            \`\`\`

            ### Valid Types
            - **feat**: A new feature
            - **fix**: A bug fix
            - **docs**: Documentation only changes
            - **style**: Changes that don't affect code meaning (whitespace, formatting)
            - **refactor**: Code change that neither fixes a bug nor adds a feature
            - **perf**: Performance improvement
            - **test**: Adding or updating tests
            - **build**: Changes to build system or dependencies
            - **ci**: Changes to CI configuration
            - **chore**: Other changes that don't modify src or test files
            - **revert**: Reverts a previous commit

            ### Examples
            \`\`\`
            feat(core): add new collection query method
            fix(agents): resolve memory leak in agent pool
            docs(readme): update installation instructions
            refactor(types): simplify type definitions
            \`\`\`

            ### Breaking Changes
            Add \`BREAKING CHANGE:\` in the commit body or append \`!\` after the type:
            \`\`\`
            feat(api)!: change authentication method

            BREAKING CHANGE: The old token-based auth is replaced with JWT
            \`\`\`

            Please amend your commits to follow this format.`;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
