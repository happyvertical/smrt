{"version":3,"file":"index.js","sources":["../src/federation/index.ts","../src/protocols/index.ts","../src/index.ts"],"sourcesContent":["/**\n * Federation utilities for gnode P2P discovery and communication\n */\n\nexport interface GnodePeer {\n  url: string;\n  name: string;\n  discoveredAt: Date;\n  lastSeen?: Date;\n}\n\nexport interface FederationConfig {\n  enabled: boolean;\n  discoverability: 'public' | 'private';\n  peers: string[];\n  autodiscovery: boolean;\n  peerExchange: boolean;\n}\n\nexport class Federation {\n  constructor(private config: FederationConfig) {}\n\n  async discoverPeers(): Promise<GnodePeer[]> {\n    // TODO: Implement peer discovery via WebFinger, DNS, etc.\n    return [];\n  }\n\n  async exchangePeers(peer: GnodePeer): Promise<GnodePeer[]> {\n    // TODO: Implement peer exchange protocol\n    return [];\n  }\n}\n","/**\n * Federation protocols for gnode discovery and communication\n */\n\nexport interface WebFingerResponse {\n  subject: string;\n  links: Array<{\n    rel: string;\n    type?: string;\n    href: string;\n  }>;\n}\n\nexport class WebFingerProtocol {\n  static async discover(domain: string): Promise<WebFingerResponse | null> {\n    // TODO: Implement WebFinger discovery\n    // GET https://example.com/.well-known/gnode\n    return null;\n  }\n}\n\nexport class PeerExchangeProtocol {\n  static async exchange(peerUrl: string): Promise<string[]> {\n    // TODO: Implement peer list exchange\n    // GET /api/federation/peers\n    return [];\n  }\n}\n","/**\n * @have/gnode - SMRT Federation Library\n *\n * Federated local knowledge bases (gnodes) with P2P discovery and protocols.\n * Built on top of @smrt/core for SMRT object federation.\n */\n\nexport * from './federation/index.js';\nexport * from './protocols/index.js';\n\nexport const version = '0.1.0';\n"],"names":[],"mappings":"AAmBO,MAAM,WAAW;AAAA,EACtB,YAAoB,QAA0B;AAA1B,SAAA,SAAA;AAAA,EAA2B;AAAA,EAE/C,MAAM,gBAAsC;AAE1C,WAAO,CAAA;AAAA,EACT;AAAA,EAEA,MAAM,cAAc,MAAuC;AAEzD,WAAO,CAAA;AAAA,EACT;AACF;AClBO,MAAM,kBAAkB;AAAA,EAC7B,aAAa,SAAS,QAAmD;AAGvE,WAAO;AAAA,EACT;AACF;AAEO,MAAM,qBAAqB;AAAA,EAChC,aAAa,SAAS,SAAoC;AAGxD,WAAO,CAAA;AAAA,EACT;AACF;ACjBO,MAAM,UAAU;"}